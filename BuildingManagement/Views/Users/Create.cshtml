@model BuildingManagement.Models.User

@{
    ViewData["Title"] = "User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-6">
                <h4>@ViewData["Title"]</h4>
            </div>
            <div class="col-6">
                <div class="breadcrumb float-right active">
                    <a asp-action="Index" class="btn btn-primary">Back to List <i class="fas fa-back"></i></a>

                </div>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="card card-gray">
            <div class="card-header">
                <h3 class="card-title">@ViewData["Title"] Create</h3>
            </div>
            <div class="card-body">
<div class="row">
                    <div class="col-md-6">
                        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group text-danger">@ViewData["Msg"]</div>
            <div class="form-group">
                <label asp-for="UserCde" class="control-label"></label>
                <input asp-for="UserCde" class="form-control" />
                <span asp-validation-for="UserCde" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserNme" class="control-label"></label>
                <input asp-for="UserNme" class="form-control" />
                <span asp-validation-for="UserNme" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Position" class="control-label"></label>
                <input asp-for="Position" class="form-control" />
                <span asp-validation-for="Position" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                                <select asp-for="Gender" class="form-control form-select">
                                    <option value="Male"> Male </option>
                                    <option value="Female"> Female </option>
                                    <option value="Others"> Others </option>
                                </select>
                               
                                
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MnugrpId" class="control-label"></label>
                <input asp-for="MnugrpId" class="form-control" />
                <span asp-validation-for="MnugrpId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pwd" class="control-label"></label>
                <input asp-for="Pwd" class="form-control" />
                <span asp-validation-for="Pwd" class="text-danger"></span>
            </div>
                            
            <div class="form-group">
                                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

                        </form>

            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function displayImage() {
            var input = document.getElementById('inputMainImg');
            var imgFrame = document.getElementById('selectedMainImg');
            if (input.files && input.files[0]) {
                imgFrame.style.display = "flex";
                var file = input.files[0];

                var reader = new FileReader();
                reader.onload = function (e) {
                    imgFrame.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
            else {
                imgFrame.style.display = "none";
            }
        }
        function displayImages(input) {
            const imageContainer = document.getElementById('image-container');
            imageContainer.innerHTML = '';

            const files = input.files;
            for (let i = 0; i < files.length; i++) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement('img');
                    img.width = 120;
                    img.height = 100;
                    img.style.marginRight = 10 + 'px';
                    img.style.marginBottom = 10 + 'px';
                    img.src = e.target.result;
                    imageContainer.appendChild(img);
                };
                reader.readAsDataURL(files[i]);
            }
        }
    </script>
}


